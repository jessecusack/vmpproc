function generate_binned_profiles(pflFiles, varargin)
% This bins a list of profile files. The minimum and maximum bin depths are
% found automatically. The binned profiles are saved into the same
% directories as the profile files. 
%
% Arguments
% ---------
% pFiles : struct
%     Structure generated by global search with dir. 
%     E.g. dir("folder/profile_*.mat")
% dz : numeric, optional
%     Bin spacing in m. Default is 2.  
% overwrite : bool, optional
%     Specify overwrite=true to overwrite existing binned files. Default is
%     false. 
%
% First created by Jesse Cusack (jesse.cusack@oregonstate.edu) 2023-06-04.

iP = inputParser;
iP.StructExpand = false;
validNumber = @(x) isnumeric(x) && isscalar(x);
addRequired(iP, 'pflFiles', @isstruct);
addParameter(iP, 'dz', 2, validNumber);
addParameter(iP, 'overwrite', false);
parse(iP, pflFiles, varargin{:}); 
pflFiles = iP.Results.pflFiles;
dz = iP.Results.dz;
overwrite = iP.Results.overwrite;

nFiles = length(pflFiles);

% Find min/max height
zmin = 0;
zmax = -100;
for idx = 1:nFiles
    pflFile = fullfile(pflFiles(idx).folder, pflFiles(idx).name);
    pfl = load(pflFile, "z_slow");
    zmin = min([zmin; pfl.z_slow]);
    zmax = max([zmax; pfl.z_slow]);
end

zmin = floor(zmin);
zmax = ceil(zmax);

for idx = 1:nFiles
    fprintf('Binning %i/%i\n', idx, nFiles)

    saveName = sprintf("binned_%s.mat", pflFiles(idx).name(9:11));
    saveFullFile = fullfile(pflFiles(idx).folder, saveName);
    if exist(saveFullFile, "file") && ~overwrite
        fprintf("%s already exists, skipping.\n", saveFullFile)
        continue
    end

    pflFile = fullfile(pflFiles(idx).folder, pflFiles(idx).name);
    pfl = load(pflFile);
    bp = bin_profile(pfl, zmin, zmax, dz);
    save(saveFullFile, "-struct", "bp")
end

end