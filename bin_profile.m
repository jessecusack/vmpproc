function bp = bin_profile(pfl, zmin, zmax, dz)
% This function bins a profile structure by height (negative depth). Not
% all variables in the profile are binned.
%
% Arguments
% ---------
% pfl : struct
%    Profile structure generated by diss_profiles_from_p_file.
% zmin : numeric
%    Minimum height bin (max depth bin), e.g. -200 m. 
% zmax : numeric
%    Maximum height bin (min depth bin), e.g. -5 m.
% dz : numeric, optional
%    Bin width, e.g. 1 m. 
%
% Returns
% -------
% bp : struct
%     Binned profile.
%
% First created by Jesse Cusack (jesse.cusack@oregonstate.edu) 2023-06-03.

% Parse inputs
iP = inputParser;
iP.StructExpand = false;
validNumber = @(x) isnumeric(x) && isscalar(x);
addRequired(iP, 'pfl', @isstruct);
addRequired(iP, 'zmin', validNumber);
addRequired(iP, 'zmax', validNumber);
addRequired(iP, 'dz', validNumber)
parse(iP, pfl, zmin, zmax, dz); 
pfl = iP.Results.pfl;
zmin = iP.Results.zmin;
zmax = iP.Results.zmax;
dz = iP.Results.dz;

% Define bins
zbins = zmin:dz:zmax;

bp = struct();
bp.z = 0.5*(zbins(1:end-1) + zbins(2:end));  % mid point of bins
nz = length(zbins) - 1;
SZ = [nz, 1];

% Unbinned quantities
bp.sn = pfl.sn;
bp.lon = pfl.lon;
bp.lat = pfl.lat;
bp.time_start = pfl.time_start;
bp.time_end = pfl.time_end;

% Removes NaN and errors later
use_slow = (pfl.z_slow > zmin) & (pfl.z_slow < zmax);
use_diss = (pfl.z_diss > zmin) & (pfl.z_diss < zmax);

% Do binning
ib_slow = discretize(pfl.z_slow(use_slow), zbins);
ib_diss = discretize(pfl.z_diss(use_diss), zbins);

bp.T = accumarray(ib_slow, pfl.T(use_slow), SZ, @mean, NaN);
bp.SP = accumarray(ib_slow, pfl.SP(use_slow), SZ, @mean, NaN);
bp.CT = accumarray(ib_slow, pfl.CT(use_slow), SZ, @mean, NaN);
bp.SA = accumarray(ib_slow, pfl.SA(use_slow), SZ, @mean, NaN);
bp.rho0 = accumarray(ib_slow, pfl.rho0(use_slow), SZ, @mean, NaN);

bp.eps1 = accumarray(ib_diss, pfl.eps1(use_diss), SZ, @mean, NaN);
bp.eps2 = accumarray(ib_diss, pfl.eps2(use_diss), SZ, @mean, NaN);

end